/**
 * @class Phorum.UI.MessageSubject
 * @extends Phorum.UI.TextElement
 * 
 * <p>
 *   This class can be used to access and manipulate message subject textfield
 *   elements in Phorum.
 * </p>
 * <p>
 *   By default, the constructor will automatically search the page for some
 *   known message subject textfield identifiers. If you need more control
 *   over the selector(s) to use for the textfield lookup, then you can provide
 *   a jQuery selector or selector array as the argument for the constructor.
 * </p>
 * <p><pre><code>
// Retrieve the message body using the built-in list of possible ids.
var t1 = new Phorum.UI.MessageSubject();
t1.focus();

// Retrieve using a custom jQuery selector.
var t2 = new Phorum.UI.MessageBody('#phorum .mytextfield');
t2.addTags('[i]', '[/i]');

// Or using an array of selectors.
var t3 = new Phorum.UI.MessageBody(['#this', '#that']);

// It is possible to access the jQuery wrapper object for
// the message body input.
var $jquerytextarea = t3.wrapper();
$jquerytextarea.css('color', 'blue');
 * </code></pre></p>
 *
 * @constructor
 *   Create a new Phorum.UI.MessageBody object.
 * @param {String/Array} selectors (optional)
 *   The jQuery selector or selectors to use for looking up the element to
 *   manage. The first selector that matches a single element will be used.
 *   When no selectors are provided, then some known Phorum message body
 *   identifiers will be used by default.
 */
Phorum.UI.MessageSubject = Phorum.extend(Phorum.UI.TextElement,

    function (selectors) {

        this.className = 'Phorum.UI.MessageSubject';

        this.selectors = [
            '#phorum #phorum_subject',   // Phorum 5.1
            '#phorum #subject'           // Phorum 5.2+
        ];

        this.parentConstructor(selectors);
    }
);
